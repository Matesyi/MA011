write.csv(ts, file = "cbow-result.csv")
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F)
iba.mat <- as.matrix(grepA1[,2:201]) words <- as.character(unlist(grepA1[1]))
rownames(iba.mat) <- words
library("tsne")
tsne_data <- tsne(iba.mat, k=2)
ts <- tsne_data
rownames(ts) <- words
write.csv(ts, file = "cbow-result.csv")
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F)
iba.mat <- as.matrix(grepA1[,2:201]) words <- as.character(unlist(grepA1[1]))
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F)
i
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F)
iba.mat <- as.matrix(grepA1[,2:201]) words <- as.character(unlist(grepA1[1]))
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F) iba.mat <- as.matrix(grepA1[,2:201]) words <- as.character(unlist(grepA1[1]))
grepA1 <- read.csv("C:\\Users\\Matesyi\\Desktop\\grep.A.cbow1.csv", sep = " ", header = F)
iba.mat <- as.matrix(grepA1[,2:201])
words <- as.character(unlist(grepA1[1]))
rownames(iba.mat) <- words
library("tsne")
tsne_data <- tsne(iba.mat, k=2)
ts <- tsne_data
rownames(ts) <- words
write.csv(ts, file = "cbow-result.csv")
memory.size()
memory.limit()
memory.limit(5000)
cd ..
getwd())
getwd()
setwd(../Desktop)
setwd(C:\Users\Matesyi\Desktop\Moje Dokumenty\MV011)
setwd(C:\\Users\\Matesyi\\Desktop\\Moje Dokumenty\\MV011)
setwd(C:/Users/Matesyi/Desktop/Moje Dokumenty/MV011)
setwd(c:/Users/Matesyi/Desktop/Moje Dokumenty/MV011)
getwd()
library("prob");
#zjisteni cesty pracovniho adresare
install.packages (c("prob"));
#getwd();
?prob
??prob
library ("prob");
choose(4, 5)
choose(14, 5)
getwd();
library ("prob");
choose(14, 5);
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
choose(4,1);
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
choose (4,1);
n <- 4
mince <- tosscoin(n)
mince
dim(mince)
nrow(mince)
ncol(mince)
names (mince) <- c ("first", "second", "third")
mince$first
mince$second
str(mince)
as.numeric (mince$third)
s <- probspace(mince)
s
A <- subset (s, isin (s, rep ("H", n)))
A
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
s1 <- s
s1$soucet <- apply(kostky2, 1, sum)
S1$soucin <- apply(kostky2, 1, prod)
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
n <- 100
par (mfrow = c (1,1), mar = c (4,4,4,1))
plot (c (18,19), c (18,19), type = "n", xlab = "Eva", ylab = "Honza")
E <- runif(n, 18,19)
H <- runif(n, 18, 19)
n <- 100
par (mfrow = c (1,1), mar = c (4,4,4,1))
plot (c (18,19), c (18,19), type = "n", xlab = "Eva", ylab = "Honza")
E <- runif(n, 18,19)
H <- runif(n, 18, 19)
V$ok <- (V$E - 1/6 <= V$H) & (V$H <= V$E + 1/3)
V$color <- ifelse ( V$ok, "#00cc00", "#ff0000")
V$symbol <- ifelse (V$ok, 4, 4)
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
library(prod)
library('prod')
library("prod")
library ("prob");
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
#geometricka prob
n <- 100
par (mfrow = c (1,1), mar = c (4,4,4,1))
plot (c (18,19), c (18,19), type = "n", xlab = "Eva", ylab = "Honza")
E <- runif(n, 18,19)
H <- runif(n, 18, 19)
V$ok <- (V$E - 1/6 <= V$H) & (V$H <= V$E + 1/3)
V$color <- ifelse ( V$ok, "#00cc00", "#ff0000")
V$symbol <- ifelse (V$ok, 4, 4)
#scatter plot
# prikaz "points" vykresluje body, jejich souradnice jsou zadany vektory jako prvni dva argumenty
# parametr col nastavuje barvu, parametr pch kreslici symbol, lwd tloustku car
points (V$E, V$H, col = V$color, pch = V$symbol, lwd = 2)
# spocitame a do obrazku vypiseme relativni cetnost
nA <- sum (V$ok)
fA <- nA / n
title (main = paste (nA, "/", n, "=", fA))
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
n <- 1000
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R')
load("C:/Users/Matesyi/Desktop/Programy/MA011/cviko2.R")
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko3.R')
source('C:/Users/Matesyi/Desktop/Programy/MA011/cviko3.R')
kostky <- rolldie (2)
S <- probspace (kostky)
# A = 2 petky
# B = soucet delitelny peti
A <- subset (S, X1 == 5 & X2 == 5)
B <- subset (S, (X1 + X2) %% 5 == 0)
AB <- intersect (A, B)
Prob (AB) / Prob (B)
S <- probspace (kostky)
kostky <- rolldie (2)
kostky
S
# "D" = divka, "H" = hoch
u <- c ("D", "H")
p <- c (0.5, 0.5)
#rozdeleni na vsechny moznosti (vytvoreni space)
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
kresleni bar chartu s legendou
barplot (as.matrix (S$probs), col = rainbow (nrow (3)), horiz = TRUE, xlim = c (0, 1.4))
legen
zdeleni na vsechny moznosti (vytvoreni space)
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
#vykresleni bar chartu s legendou
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
S
u <- c ("D", "H", "pes")
p <- c (0.5, 0.3, 0.2)
#rozdeleni na vsechny moznosti (vytvoreni space)
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
# P (A | B) = ?
B <- subset (S, isin (S, "D"))
A <- subset (S, isin (S, c ("D", "D")))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
B
S
A
#	Kunhuta
# "DK" = divka Kunhuta, "Do" = divka jineho jmena, "H" = hoch
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
leg
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
dev.new ()
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Fikce: kdyby petinu populace v CR tvorily zeny se stejnym jmenem
u <- c ("DJ", "Do", "H")
# Fikce: 1 osoba z 5 ma jedno stejne zenske jmeno
p1 <- 1 / 5
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "velmi zastoupene jmeno")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Marie
u <- c ("DM", "Do", "H")
# Ceska republika: 1 osoba z 40 ma jmeno Marie
p1 <- 1 / 40
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Fikce: kdyby petinu populace v CR tvorily zeny se stejnym jmenem
u <- c ("DJ", "Do", "H")
# Fikce: 1 osoba z 5 ma jedno stejne zenske jmeno
p1 <- 1 / 5
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "velmi zastoupene jmeno")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
# "DK" = divka Kunhuta, "Do" = divka jineho jmena, "H" = hoch
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Marie
u <- c ("DM", "Do", "H")
# Ceska republika: 1 osoba z 40 ma jmeno Marie
p1 <- 1 / 40
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
AB
B
A
# Pravdepodobnostn prostor vytvorime primym zapisem
kategorie <- rep (c ("A", "B", "C"), each = 2)
nehoda <- rep (c ("ano", "ne"), 3)
# Zkombinujeme do datove tabulky
el.jevy <- data.frame (kategorie, nehoda)
# Zadame pravdepodobnosti
p <- c (0.7 * 0.03, 0.7 * (1-0.03), 0.2 * 0.06, 0.2 * (1-0.06), 0.1 * 0.1, 0.1 * (1-0.1))
S <- probspace (el.jevy, probs = p)
S
sum (S$probs)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "kategorie - nehoda")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
A <- subset (S, kategorie == "A")
AN <- intersect (A, N)
Prob (AN) / Prob (N)
Prob (AN)
# Analogicky zkontrolujte ostatni podminene pravdepodobnosti a pravdepodobnosti pruniku
points (v$X, v$Y,)
n <- 100
d <- 10
par (mfrow = c(1,1), mar = c(4,4,4,1))
plot(c(0,d), c(0,d), type = "n", xlab = "bob x", ylab = "bod y")
x <- runif (n, 0, d)
y <- runif (n, 0, d)
v <- data.frame (cbind(x,y))
v$ok <- (( v$X <= v$Y) & (v$Y > d/2) & (v$X <d/2) & (v$Y < v$X + d/2))
v$color <- ifelse(v$ok, "#00cc00", "#ff0000")
v <- data.frame (cbind(x,y))
v$ok <- (( v$X <= v$Y) & (v$Y > d/2) & (v$X <d/2) & (v$Y < v$X + d/2))
data <- read.csv (file = "spotreba.csv", header = TRUE, sep = ";", dec = ",")
setws(C:\\Users\\Matesyi\\Desktop\\Programy\\MA011)
setws(C:/Users/Matesyi/Desktop/Program/MA011)
setwd(C:/Users/Matesyi/Desktop/Program/MA011)
setwd
(C:\\Users\\Matesyi\\Desktop\\Programy\\MA011)
setwd(c:/Users/Matesyi/Desktop/Program/MA011)
setwd(c:\\Users\\Matesyi\\Desktop\\Programy\\MA011)
load("C:/Users/Matesyi/Desktop/Programy/MA011/cviko10.R")
getwd()
setwd("C:/Users/Matesyi/Desktop/Program/MA011")
integrate(1/5-t/50,0,10)
integrate(1/5-dt/50, 0, 10)
integrand <- function(x) {1/5-t/50}
integrate(integrand, 0, 10)
integrate(integrand, lower = 0, upper = 10)
integrand <- function(x) {1/5-x/50}
integrate(integrand, lower = 0, upper = 10)
integrand <- function(x) {1/5-x}
integrate(integrand, lower = 0, upper = 10)
matrix?
z
?"matrix"
tabulka <- read.csv (file = "KysMlecna.csv", header = TRUE, sep = ",", dec = ".")
names (tabulka)
str (tabulka)
setwd ("C:/Users/Matesyi/Desktop/Programy/MA011")
tabulka <- read.csv (file = "KysMlecna.csv", header = TRUE, sep = ",", dec = ".")
names (tabulka)
str (tabulka)
#informace o sloupcich v tabulce (min., prumer, kvantily, max.)
summary (tabulka)
# prokladame primkou (polynom stupne jedna)
#Fitting Linear Models (formula, data) - novorozenec je zavisly na matce
model1 <- lm (novorozenec ~ matka, data = tabulka)
model1
#provedeme opet pro celkovy vypis informaci
prehled1 <- summary (model1)
#Intercept je "beta 0"
prehled1
#beta0 = -1.3, beta1 = 0.85
# Yi = -1.3 + 0.85 + xi + "epsilon i"
#prehled jednotlivych statistik - volani pomoci vice pristupu
model1$coefficients
coef (model1)
model1$residuals
residuals (model1)
model1$fitted.values
fitted.values (model1)
#vypis do tabulky (matice)
model.matrix (model1)
#Residual standard error (na urcitych stupnich volnosti)
prehled1$sigma
#Degrees of freedom
prehled1$df
#Multiple R-squared
prehled1$r.squared
#Adjusted R-squared
prehled1$adj.r.squared
#F-statistic
prehled1$fstatistic
# parabola
model2 <- lm (novorozenec ~ matka + I(matka^2), data = tabulka)
model2
prehled2 <- summary (model2)
#p hodnoty jsou vysoke takze je to spatny(pro slovaky zly) model
prehled2
model2$coefficients
coef (model2)
model2$residual2
residuals (model2)
model2$fitted.values
fitted.values (model2)
model.matrix (model2)
prehled2$sigma
prehled2$df
prehled2$r.squared
prehled2$adj.r.squared
prehled2$fstatistic
# grafika
summary (tabulka)
#canvas pro graf (rozmezi osy X, rozmezi osy Y, typ grafu, popis osy X, popsi osy Y)
plot (c (0, 70), c (-5, 60), type = "n", xlab = "matka", ylab = "novorozenec")
#vykresleni bodu (souradnice X, souradnice Y, barva, cislo typu symbolu, tloustka cary, velikost symbolu)
points (tabulka$matka, tabulka$novorozenec, col = "blue", pch = 24, lwd = 1.5, cex = 1.0)
# pruchystame si sit na x-ove ose
x <- seq (0, 70, by = 0.1)
# pomoci funkce "predict" nechame dopocitat odpovidajici Y-ove hodnoty na regresni funkci
Y1 <- predict (model1, data.frame (matka = x))
Y2 <- predict (model2, data.frame (matka = x))
#primka (souradnice X, souradnice Y, barva, tloustka)
lines (x, Y1, col = "red", lwd = 2)
#parabola (souradnice X, souradnice Y, barva, tloustka)
lines (x, Y2, col = "#00cc00", lwd = 2)
# 95% intervaly spolehlivosti pro koeficienty modelu
# porovnani dvou regresnich modelu (primky a paraboly)
confint (model1, level = 0.95)
prehled1
confint (model2, level = 0.95)
prehled2
# muzeme prikreslit 95% pasy spolehlivosti pro stredni hodnotu, tj. kolem regresni funkce
CI1 <- predict (model1, data.frame (matka = x), interval = "confidence", level = 0.95)
CI2 <- predict (model2, data.frame (matka = x), interval = "confidence", level = 0.95)
lines (x, CI1[,2], col = "red", lty = 2)
lines (x, CI1[,3], col = "red", lty = 2)
lines (x, CI2[,2], col = "#00cc00", lty = 2)
lines (x, CI2[,3], col = "#00cc00", lty = 2)
#IMPORTANT - ulozeni grafu do PDF (ulozeno do souboru)
dev.copy2pdf (file = "obrazek.pdf", width = 5, height = 4)
# boxploty rezidui
boxplot (model1$residuals, model2$residuals, ylab = "rezidua", names = c(1,2), border = c ("red", "#00cc00"))
dev.copy2pdf (file = "obrazek2.pdf", width = 3.5, height = 4)
# porovnani modelu
#tady jsou reziuda lepsi
sum (model1$residuals^2) / model1$df.residual
prehled1$r.squared
prehled1$adj.r.squared
sum (model2$residuals^2) / model2$df.residual
prehled2$r.squared
prehled2$adj.r.squared
anova (model1, model2)
