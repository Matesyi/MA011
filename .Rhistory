#vykresleni bar chartu s legendou
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
S
u <- c ("D", "H", "pes")
p <- c (0.5, 0.3, 0.2)
#rozdeleni na vsechny moznosti (vytvoreni space)
iidspace (u, 1, probs = p)
S <- iidspace (u, 2, probs = p)
S
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4))
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
# P (A | B) = ?
B <- subset (S, isin (S, "D"))
A <- subset (S, isin (S, c ("D", "D")))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
B
S
A
#	Kunhuta
# "DK" = divka Kunhuta, "Do" = divka jineho jmena, "H" = hoch
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
leg
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
dev.new ()
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Fikce: kdyby petinu populace v CR tvorily zeny se stejnym jmenem
u <- c ("DJ", "Do", "H")
# Fikce: 1 osoba z 5 ma jedno stejne zenske jmeno
p1 <- 1 / 5
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "velmi zastoupene jmeno")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Marie
u <- c ("DM", "Do", "H")
# Ceska republika: 1 osoba z 40 ma jmeno Marie
p1 <- 1 / 40
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Fikce: kdyby petinu populace v CR tvorily zeny se stejnym jmenem
u <- c ("DJ", "Do", "H")
# Fikce: 1 osoba z 5 ma jedno stejne zenske jmeno
p1 <- 1 / 5
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "velmi zastoupene jmeno")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
# "DK" = divka Kunhuta, "Do" = divka jineho jmena, "H" = hoch
u <- c ("DK", "Do", "H")
# Ceska republika: 1 osoba z 3566848 ma jmeno Kunhuta
p1 <- 1 / 3566848
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Kunhuta")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
#	Marie
u <- c ("DM", "Do", "H")
# Ceska republika: 1 osoba z 40 ma jmeno Marie
p1 <- 1 / 40
p <- c (p1, 0.5 - p1, 0.5)
S <- iidspace (u, 2, probs = p)
S
#	V jedne rodine nemuze mit vice deti stejne jmeno
S[2,]$probs <- S[2,]$probs + S[1,]$probs / 2
S[4,]$probs <- S[4,]$probs + S[1,]$probs / 2
S[1,]$probs <- 0
S
dev.new ()
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "Marie")
legend ("right", legend = paste (S$X1, S$X2, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
B <- subset (S, isin (S, "DK"))
A <- subset (S, ! isin (S, "H"))
AB <- intersect (A, B)
Prob (AB) / Prob (B)
# ================================================================================
AB
B
A
# Pravdepodobnostn prostor vytvorime primym zapisem
kategorie <- rep (c ("A", "B", "C"), each = 2)
nehoda <- rep (c ("ano", "ne"), 3)
# Zkombinujeme do datove tabulky
el.jevy <- data.frame (kategorie, nehoda)
# Zadame pravdepodobnosti
p <- c (0.7 * 0.03, 0.7 * (1-0.03), 0.2 * 0.06, 0.2 * (1-0.06), 0.1 * 0.1, 0.1 * (1-0.1))
S <- probspace (el.jevy, probs = p)
S
sum (S$probs)
barplot (as.matrix (S$probs), col = rainbow (nrow (S)), horiz = TRUE, xlim = c (0, 1.4), main = "kategorie - nehoda")
legend ("right", legend = paste (S$kategorie, S$nehoda, round (S$probs, 2), sep = " - ") , fill = rainbow (nrow (S)))
N <- subset (S, nehoda == "ano")
Prob (N)
A <- subset (S, kategorie == "A")
AN <- intersect (A, N)
Prob (AN) / Prob (N)
Prob (AN)
# Analogicky zkontrolujte ostatni podminene pravdepodobnosti a pravdepodobnosti pruniku
points (v$X, v$Y,)
n <- 100
d <- 10
par (mfrow = c(1,1), mar = c(4,4,4,1))
plot(c(0,d), c(0,d), type = "n", xlab = "bob x", ylab = "bod y")
x <- runif (n, 0, d)
y <- runif (n, 0, d)
v <- data.frame (cbind(x,y))
v$ok <- (( v$X <= v$Y) & (v$Y > d/2) & (v$X <d/2) & (v$Y < v$X + d/2))
v$color <- ifelse(v$ok, "#00cc00", "#ff0000")
v <- data.frame (cbind(x,y))
v$ok <- (( v$X <= v$Y) & (v$Y > d/2) & (v$X <d/2) & (v$Y < v$X + d/2))
source('C:/Users/Matesyi/Desktop/Programy/MA011/prednaska7.R')
load("cviceni7.RData")
getwd ()
setwd ("C:/Users/Matesyi/Desktop/Programy/MA011")
load("cviceni7.RData")
clen <- data7$pr1$clen
dom <- data7$pr1$dom
# relativni cetnosti
rel_cetnosti <- dom/30
# kumulativni cetnosti
kum_cetnosti <- cumsum(dom)
# kumulativni relativni cetnosti
kum_rel_cetnosti <- cumsum(rel_cetnosti)
# zapis do tabulky
tabulka <- data.frame(nj=dom,pj=rel_cetnosti,Nj=kum_cetnosti,Fj=kum_rel_cetnosti)
tabulka
# graf cetnostni funkce
x11(w=12,h=9)
tabulka
# graf cetnostni funkce
x11(w=12,h=9)
plot(clen,dom,type="p",pch=20,xlab="pocet clenu domacnosti",ylab="hodnoty cetnostni funkce",main="Graf cetnostni funkce")
# graf empiricke distribucni funkce
$data <- read.csv(file = "ocel.csv", header = TRUE, sep = ",", dec = ".");
data <- read.csv(file = "ocel.csv", header = TRUE, sep = ",", dec = ".");
data
d.j <- data$mez.h - data$mez.d
stredy <- (data$mez.d + data$mez.h) / 2
stredy
table <- data.frame(stredy)
table
stredy <- (data$mez.d + data$mez.h) / 2
# a pridejte je do tabulky
#	pocet skupin
r <- nrow (data)
#	absolutni cetnosti
n.j <- data$pocet
#	pocet pozorovani
n <- sum (n.j)
#	relativni cetnosti
p.j <- n.j / n
sum (p.j)
# kumulativni absolutni cetnosti
N.j <- cumsum (n.j)
# kumulativni relativni cetnosti
F.j <- N.j / n
#	tabulka
tabulka <- data.frame (znamka = data, n.j, p.j, N.j, F.j)
tabulka
tabulka <- data.frame (stred = stredy, n.j, p.j, N.j, F.j)
tabulka
barplot (tabulka$n.j, names.arg = tabulka$stred, xlab = "stred", ylab = "pocet pozorovani", main = "sloupkovy diagram")
plot (tabulka$stred, tabulka$n.j, type = "p", pch = 20, cex = 2, col = "red", xlab = "stred", ylab = "hodnoty cetnostni funkce", main = "cetnostni funkce")
plot (tabulka$stred, tabulka$n.j, type="b", pch = 20, xlab = "stred", ylab = "pocet pozorovani", main = "polygon cetnosti", col = "red", cex = 2, lty = 2)
plot (tabulka$stred, tabulka$n.j, type="l", pch = 20, xlab = "stred", ylab = "pocet pozorovani", main = "polygon cetnosti", col = "red", cex = 2, lty = 2)
plot (tabulka$stred, tabulka$n.j, type="b", pch = 20, xlab = "stred", ylab = "pocet pozorovani", main = "polygon cetnosti", col = "red", cex = 2, lty = 2)
plot (c(30,tabulka$stred,170), c(0,tabulka$F.j,1), type="s", xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce", col = "red", lwd = 2)
plot (ecdf (X), col = "red", lwd = 2, xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce")
X <- rep (tabulka$stred, tabulka$n.j)
plot (ecdf (X), col = "red", lwd = 2, xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce")
hist (X, breaks = seq (0.5, 4.5, by = 1), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (0, 5))
hist (X, breaks = seq (30, 170, by = 10), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (0, 5))
X <- rep (tabulka$stred, tabulka$n.j)
plot (ecdf (X), col = "red", lwd = 2, xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce")
#	histogram
hist (X, breaks = seq (30, 170, by = 10), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (0, 5))
hist (X, breaks = seq (30, 170, by = 10), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
hist (X, breaks = seq (30, 170, by = 10), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (20, 170))
hist (X, breaks = seq (30, 170, by = 10), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (60, 170))
hist (X, breaks = seq (40, 160, by = 1), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
hist (X, breaks = seq (40, 160, by = 20), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
tabulka
prumer <- sum (X) / n
prumer
# v R je pro prumer funkce "mean"
mean (X)
# rozpyl a smerodatna odchylka
rozptyl <- mean (X^2) - prumer^2
rozptyl
smerodatna_odchylka <- sqrt (rozptyl)
smerodatna_odchylka
# v R je pro vyberovy rozptyl funkce "var", ale je potreba jej zkorigovat na rozptyl z prednasky
var (X) * (n-1) / n
# krabicovy diagram (boxplot)
boxplot (X, horizontal = TRUE, ylim = range (X), main = "krabicovy diagram (boxplot)")
# pro nazornost muzeme prikreslit i jednotliva pozorovani
stripchart (X, vertical = FALSE, method = "jitter", pch = 21, col = "red", bg = "yellow", cex = 1.5, add = TRUE)
#	kvantily a krabicovy diagram
# vektor poradi a serazeny vzorek
R <- rank (X)
R
X.sorted <- sort (X)
X.sorted
# median, kvartily, kvartilova odchylka
c.25 <- 0.25 * n
c.50 <- 0.50 * n
c.75 <- 0.75 * n
c (c.25, c.50, c.75)
# kvantily
x.25 <- (X.sorted[c.25] + X.sorted[c.25 + 1]) / 2
x.50 <- (X.sorted[c.50] + X.sorted[c.50 + 1]) / 2
x.75 <- (X.sorted[c.75] + X.sorted[c.75 + 1]) / 2
# spocitejte navic x.33
c.33 <- 0.33 * n
x.33 <- X.sorted[ceiling(c.33)]
c (x.25, x.50, x.75, x.33)
# kvartilova odchylka (IQR)
q <- x.75 - x.25
q
# hradby boxplotu
c (x.25, x.75) + c (-1, 1) * 1.5 * q
c (x.25, x.75) + c (-1, 1) * 3 * q
# porovnejte s nasledujicim
median (X)
quantile (X, c (0.25, 0.5, 0.75, 0.33))
# 33% kvantil se lisi, R totiz pri vypoctu kvantilu vzdy pouziva prumerovani dvou okolnich hodnot
# boxplot pomoci stejnojmenne funkce
boxplot (X, horizontal = TRUE, ylim = range (X), xlab = "znamka", main = "krabicovy diagram (boxplot)")
stripchart (X, vertical = FALSE, method = "jitter", pch = 21, col = "red", bg = "yellow", cex = 1.5, add = TRUE)
# "fousy" v R oznacuji nejmensi a nejvetsi pozorovani, ktera jeste jsou uvnitr vnitrni hradby
load("cviceni7.RData")
stredy <- data7$pr2$stredy
dom <- data7$pr2$dom
# relativni cetnosti
rel_cetnosti <- dom/sum(dom)
# kumulativni cetnosti
kum_cetnosti <- cumsum(dom)
# kumulativni relativni cetnosti
kum_rel_cetnosti <- cumsum(rel_cetnosti)
# zapis do tabulky
tabulka <- data.frame(nj=dom,pj=rel_cetnosti,Nj=kum_cetnosti,Fj=kum_rel_cetnosti)
tabulka
# histogram
# nejprve je potreba vytvorit data
x <- rep(stredy,times=dom)
hist(x,breaks=c(35,stredy+15),xlab="vydaje",ylab="hodnoty cetnostni hustoty",main="Histogram")
# graf empiricke distribucni funkce
plot(seq(from=5,to=245,by=30),c(0,0,kum_rel_cetnosti,1),type='b',pch=20,xlab="vydaje",ylab="hodnoty empir. distr. fce",main="Empiricka distribucni funkce")
#----------------------------------------------------------------------------------------------------------------------------------------------------------
# Treti priklad
# nacteni dat
load("cviceni7.RData")
body <- data7$pr3$body
stud <- data7$pr3$stud
# vytvoreni dat
data <- rep(body,times=stud)
# vypocet kvantilu
quantile(data,probs=c(.5,.1,.9,.25,.75))
#----------------------------------------------------------------------------------------------------------------------------------------------------------
# Ctvrty priklad
# nacteni dat
load("cviceni7.RData")
clen <- data7$pr1$clen
dom <- data7$pr1$dom
# vytvoreni dat
data <- rep(clen,times=dom)
# prumer
prumer <- mean(data)
# rozptyl, pozor R implicitne pocita s 1/(n-1)
rozptyl <- var(data)
# korekce
n <- sum(dom)
rozptyl <- (n-1)/n*rozptyl
#----------------------------------------------------------------------------------------------------------------------------------------------------------
# Paty priklad
# boxplot
boxplot(data,horizontal=T,main="Boxplot")
#----------------------------------------------------------------------------------------------------------------------------------------------------------
# Sesty priklad
# nacteni dat
data <- data7$pr6$data
# vytvoreni vektoru poradi
r <- rank(data)   # seradime data
rr <- factor(r)
j <- as.numeric(levels(rr))  # zjistime hodnoty poradi
# vzorecek pro alfa
n <- length(data)
alpha_j <- (j-.375)/(n+.25)
# prislusne kvantily normalniho rozdeleni
u_j <- qnorm(alpha_j)
# vybereme data tak, aby se neopakovala
dd <- factor(data)
jj <- as.numeric(levels(dd))
# vykreslime body
plot(u_j,jj,pch=20,xlab="teoreticky kvantil",ylab="pozorovany kvantil",main="Q-Q plot")
# body prolozime primkou
model <- lm(jj~u_j)
points(u_j,jj-model$residuals,type="l")
# naprogramujte n-p plot
#-----------------------------------------------------------------------------------------
source('C:/Users/Matesyi/Desktop/Programy/MA011/prednaska7.R')
load("C:/Users/Matesyi/Desktop/Programy/MA011/cviceni7.RData")
data <- read.csv(file = "ocel.csv", header = TRUE, sep = ",")
# ... podobne jako v Prikladu 1
# dopocitejte si stredy a delky jednotlivych intervalu
d.j <- data$mez.h - data$mez.d
stredy <- (data$mez.d + data$mez.h) / 2
# a pridejte je do tabulky
#	pocet skupin
r <- nrow (data)
#	absolutni cetnosti
n.j <- data$pocet
#	pocet pozorovani
n <- sum (n.j)
#	relativni cetnosti
p.j <- n.j / n
sum (p.j)
# kumulativni absolutni cetnosti
N.j <- cumsum (n.j)
# kumulativni relativni cetnosti
F.j <- N.j / n
#	tabulka
tabulka <- data.frame (stred = stredy, n.j, p.j, N.j, F.j)
tabulka
tabulka <- data.frame (stred = stredy, n.j, p.j, N.j, F.j, f.j)
tabulka
f.j <- p.j / d.j
#	tabulka
tabulka <- data.frame (stred = stredy, n.j, p.j, N.j, F.j, f.j)
tabulka
tabulka <- data.frame (data$mez.d,stred = stredy, n.j, p.j, N.j, F.j, f.j)
tabulka
tabulka <- data.frame (data$mez.d,data$mez.h,stred = stredy, n.j, p.j, N.j, F.j, f.j)
tabulka
# ... podobne jako v Prikladu 1
# sloupkovy diagram
barplot (tabulka$n.j, names.arg = tabulka$stred, xlab = "stred", ylab = "pocet pozorovani", main = "sloupkovy diagram")
#	graf cetnostni funkce
plot (tabulka$stred, tabulka$n.j, type = "p", pch = 20, cex = 2, col = "red", xlab = "stred", ylab = "hodnoty cetnostni funkce", main = "cetnostni funkce")
# polygon cetnosti
plot (tabulka$stred, tabulka$n.j, type="b", pch = 20, xlab = "stred", ylab = "pocet pozorovani", main = "polygon cetnosti", col = "red", cex = 2, lty = 2)
# graf empiricke distribucni funkce
plot (c(30,tabulka$stred,170), c(0,tabulka$F.j,1), type="s", xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce", col = "red", lwd = 2)
X <- rep (tabulka$stred, tabulka$n.j)
plot (ecdf (X), col = "red", lwd = 2, xlab = "stred", ylab = "ECDF", main="empiricka distribucni funkce")
#	histogram
hist (X, breaks = seq (40, 160, by = 20), freq = FALSE, col = "yellow", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
# prumer
prumer <- sum (X) / n
prumer
# v R je pro prumer funkce "mean"
mean (X)
# rozpyl a smerodatna odchylka
rozptyl <- mean (X^2) - prumer^2
prumer <- sum (X) / n
prumer
# v R je pro prumer funkce "mean"
mean (X)
# rozpyl a smerodatna odchylka
rozptyl <- mean (X^2) - prumer^2
rozptyl
smerodatna_odchylka <- sqrt (rozptyl)
smerodatna_odchylka
# v R je pro vyberovy rozptyl funkce "var", ale je potreba jej zkorigovat na rozptyl z prednasky
var (X) * (n-1) / n
# krabicovy diagram (boxplot)
boxplot (X, horizontal = TRUE, ylim = range (X), main = "krabicovy diagram (boxplot)")
# pro nazornost muzeme prikreslit i jednotliva pozorovani
stripchart (X, vertical = FALSE, method = "jitter", pch = 21, col = "red", bg = "yellow", cex = 1.5, add = TRUE)
#	kvantily a krabicovy diagram
# vektor poradi a serazeny vzorek
R <- rank (X)
R
X.sorted <- sort (X)
hist (X, breaks = seq (40, 160, by = 20), freq = FALSE, col = "blue", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
stripchart (X, vertical = FALSE, method = "jitter", pch = 21, col = "green", bg = "blue", cex = 1.5, add = TRUE)
# krabicovy diagram (boxplot)
boxplot (X, horizontal = TRUE, ylim = range (X), main = "krabicovy diagram (boxplot)")
# pro nazornost muzeme prikreslit i jednotliva pozorovani
stripchart (X, vertical = FALSE, method = "jitter", pch = 21, col = "green", bg = "blue", cex = 1.5, add = TRUE)
hist (X, breaks = seq (40, 160, by = 20), freq = FALSE, col = "blue", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
hist (X, breaks = c (40, 160), freq = FALSE, col = "blue", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
hist (X, breaks = c (tabulka$data.mez.d[1], tabulka$data.mez.h), freq = FALSE, col = "blue", xlab = "stred", ylab = "cetnostni hustota", main = "histogram", xlim = c (30, 170))
c (tabulka$data.mez.d[1], tabulka$data.mez.h)
tabulka
258000 - 85*85 + 95*95 - 120*120 + 150*150
View(data)
View(table)
View(table)
View(tabulka)
View(data)
